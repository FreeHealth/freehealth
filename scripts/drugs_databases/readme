README about drugs_databases

Workflow to build a drug database compatible with FreeRx / FreeHealth.

1.  Check if data source licenses allow free redistribution & modification

2.  5 scripts:

2.1 - script to download and reformat a copy of the source data:
      e.g. download-and-reformat-ca.sh
        * written in bash or C++.
        * should create a folder ~/tmp/drugsxx
        (xx = ISO country code or equivalent).
        * should copy to ~/tmp/drugsxx any required scripts from
        TRUNK/global_resources/sql (see paragraph 2.2)
        * should use wget or curl
        * reformat the data as follows:
          * remove Windows carriage returns (if applicable)
          * replace csv double-quoting and comma-separators with
            pipe-separators more-reliably handled by SQLite
          * any other editing, substitution or stripping to convert
            to SQLite importable form.
        * call sqlite with dbname and the _creator sql script (see 2.2)
          dbname must adhere to FreeRx' requirements:
          drugs-foo[2charCOUNTRY_2charLANGUAGE].db
        * following completion of the sql scripts
          * move the db up a level into ~/tmp
          * unless user indicates otherwise (for debugging):
             * drop the staging tables
             * vacuum

2.2 - four, SQLite-compatible .sql scripts:

      country_db_creation script to call the following:
      
      country_db_preparation script
        - to define / create staging tables for the source drugs data
      
      country_db_imports script
        - to import the data created and handled per paragraph 2.1
      
      global_resource FreeRx drugs_schema.sql (schema creation) script
        - to create within the db the tables needed by FreeRx
        - this is already provided (so you only have 4 scripts to write)
        
      country_db_finalize script
        - to perform the insertions needed to populate drugs-foo.db

See for example TRUNK/scripts/drugs_databases/download-and-reformat-ca.sh
See for example TRUNK/global_resources/sql/canadian*.*
